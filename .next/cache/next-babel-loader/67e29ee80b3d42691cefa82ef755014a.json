{"ast":null,"code":"var _jsxFileName = \"/Users/jenil/Desktop/code/portfolio/src/components/Header.tsx\";\nvar __jsx = React.createElement;\nimport cxs from \"cxs/component\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport Atoms from \"./designSystem/atoms\";\nimport PlainLink from \"./designSystem/PlainLink\";\nimport PlainList from \"./designSystem/PlainList\";\nconst StyledHeader = cxs(\"header\")({\n  borderBottom: \"1px solid\",\n  display: \"grid\",\n  gridTemplateColumns: `calc(${Atoms.widths.content} - ${Atoms.spacing.medium}) 1fr`,\n  gridGap: Atoms.spacing.medium,\n  flexWrap: \"wrap\",\n  marginBottom: Atoms.spacing.small,\n  paddingTop: Atoms.spacing.small,\n  [`@media (max-width: ${Atoms.breakpoints.medium})`]: {\n    gridTemplateColumns: \"1fr 1fr\"\n  }\n});\nconst links = [{\n  to: \"/blog\",\n  label: \"Blog\"\n}, {\n  to: \"/portfolio\",\n  label: \"Portfolio\"\n}, {\n  to: \"/books\",\n  label: \"Library\"\n}];\n\nconst Header = ({\n  siteTitle\n}) => {\n  const location = useRouter().pathname;\n  return __jsx(StyledHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(PlainLink, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, siteTitle), __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(PlainList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, links.map(({\n    to,\n    label\n  }) => __jsx(\"li\", {\n    key: to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(PlainLink, {\n    href: to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, label, location.includes(to) ? \" ☚\" : \"\"))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/jenil/Desktop/code/portfolio/src/components/Header.tsx"],"names":["cxs","useRouter","React","Atoms","PlainLink","PlainList","StyledHeader","borderBottom","display","gridTemplateColumns","widths","content","spacing","medium","gridGap","flexWrap","marginBottom","small","paddingTop","breakpoints","links","to","label","Header","siteTitle","location","pathname","map","includes"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAMA,MAAMC,YAAY,GAAGN,GAAG,CAAC,QAAD,CAAH,CAAc;AACjCO,EAAAA,YAAY,EAAE,WADmB;AAEjCC,EAAAA,OAAO,EAAE,MAFwB;AAGjCC,EAAAA,mBAAmB,EAAG,QAAON,KAAK,CAACO,MAAN,CAAaC,OAAQ,MAAKR,KAAK,CAACS,OAAN,CAAcC,MAAO,OAH3C;AAIjCC,EAAAA,OAAO,EAAEX,KAAK,CAACS,OAAN,CAAcC,MAJU;AAKjCE,EAAAA,QAAQ,EAAE,MALuB;AAMjCC,EAAAA,YAAY,EAAEb,KAAK,CAACS,OAAN,CAAcK,KANK;AAOjCC,EAAAA,UAAU,EAAEf,KAAK,CAACS,OAAN,CAAcK,KAPO;AAQjC,GAAE,sBAAqBd,KAAK,CAACgB,WAAN,CAAkBN,MAAO,GAAhD,GAAqD;AACnDJ,IAAAA,mBAAmB,EAAE;AAD8B;AARpB,CAAd,CAArB;AAaA,MAAMW,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,OADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADY,EAKZ;AACED,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALY,EASZ;AACED,EAAAA,EAAE,EAAE,QADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATY,CAAd;;AAeA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA;AADc,CAAD,KAEuC;AACpD,QAAMC,QAAQ,GAAGxB,SAAS,GAAGyB,QAA7B;AACA,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBF,SAArB,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACO,GAAN,CAAU,CAAC;AAAEN,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KACT;AAAI,IAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,EAEGG,QAAQ,CAACG,QAAT,CAAkBP,EAAlB,IAAwB,IAAxB,GAA+B,EAFlC,CADF,CADD,CADH,CADF,CAHF,CADF;AAkBD,CAtBD;;AAwBA,eAAeE,MAAf","sourcesContent":["import cxs from \"cxs/component\"\nimport { useRouter } from \"next/router\"\nimport React, { ReactElement } from \"react\"\nimport Atoms from \"./designSystem/atoms\"\nimport PlainLink from \"./designSystem/PlainLink\"\nimport PlainList from \"./designSystem/PlainList\"\n\ninterface HeaderProps {\n  siteTitle: string\n}\n\nconst StyledHeader = cxs(\"header\")({\n  borderBottom: \"1px solid\",\n  display: \"grid\",\n  gridTemplateColumns: `calc(${Atoms.widths.content} - ${Atoms.spacing.medium}) 1fr`,\n  gridGap: Atoms.spacing.medium,\n  flexWrap: \"wrap\",\n  marginBottom: Atoms.spacing.small,\n  paddingTop: Atoms.spacing.small,\n  [`@media (max-width: ${Atoms.breakpoints.medium})`]: {\n    gridTemplateColumns: \"1fr 1fr\",\n  },\n})\n\nconst links = [\n  {\n    to: \"/blog\",\n    label: \"Blog\",\n  },\n  {\n    to: \"/portfolio\",\n    label: \"Portfolio\",\n  },\n  {\n    to: \"/books\",\n    label: \"Library\",\n  },\n]\n\nconst Header = ({\n  siteTitle,\n}: HeaderProps): ReactElement<typeof StyledHeader> => {\n  const location = useRouter().pathname\n  return (\n    <StyledHeader>\n      <PlainLink href=\"/\">{siteTitle}</PlainLink>\n\n      <nav>\n        <PlainList>\n          {links.map(({ to, label }) => (\n            <li key={to}>\n              <PlainLink href={to}>\n                {label}\n                {location.includes(to) ? \" ☚\" : \"\"}\n              </PlainLink>\n            </li>\n          ))}\n        </PlainList>\n      </nav>\n    </StyledHeader>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}