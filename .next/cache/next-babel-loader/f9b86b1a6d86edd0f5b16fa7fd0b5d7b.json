{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar BASELINE = 1.425;\nvar scales = {\n  xxsmall: 0.125,\n  xsmall: 0.5,\n  small: 0.75,\n  medium: 1,\n  large: 1.5,\n  xlarge: 3,\n  xxlarge: 4\n};\nvar widths = {\n  auto: \"auto\",\n  fill: \"100%\",\n  container: \"34rem\",\n  // These values are changed momentarily; they’re set to 0 here to suppress TS errors.\n  content: \"\",\n  page: \"\"\n};\nwidths.page = \"calc(\".concat(widths.container, \" + \").concat(BASELINE * scales.medium * 2, \"rem)\"); // Not entirely sure where this stray .25rem comes from, but it’s needed to align things properly\n\nwidths.content = \"calc(.25rem + (100vw - \".concat(widths.page, \") / 2)\");\nexport default {\n  baseline: BASELINE,\n  widths: widths,\n  breakpoints: {\n    medium: \"64em\",\n    narrow: \"50em\"\n  },\n  colors: {\n    blackAlpha: \"rgba(0, 0, 0, 0.75)\",\n    whiteAlpha: \"rgba(255, 255, 255, 0.75)\",\n    wash: \"#eee\",\n    siteLight: \"rgba(0, 0, 0, 0.6)\",\n    siteDark: \"rgba(255, 255, 255, 0.6)\",\n    text: \"#111\",\n    meta: \"#44464B\",\n    mark: \"rgba(255, 200, 0, 0.15)\",\n    highlight: \"#ffc800\",\n    complementary: \"#058cff\",\n    additive: \"rgba(0,0,0,.05)\"\n  },\n  font: {\n    family: {\n      sans: \"\\\"National 2 Web\\\", -apple-system, system-ui, BlinkMacSystemFont, sans-serif\",\n      sohne: \"\\\"Soehne Breit Web\\\"\",\n      mono: \"\\\"JetBrains Mono Web\\\", \\\"Input Mono\\\", \\\"Source Code Pro\\\", \\\"Monaco\\\", monospace\"\n    },\n    size: {\n      small: \"\".concat(scales.small, \"rem\"),\n      regular: \"\".concat(scales.medium, \"rem\"),\n      h1: \"\".concat(scales.xlarge, \"rem\"),\n      h2: \"\".concat(scales.large, \"rem\")\n    }\n  },\n  scales: scales,\n  // This confusing little function takes `scales` and creates\n  // rem-based values for each size\n  spacing: Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(scales).map(function (n) {\n    return _defineProperty({}, n, \"\".concat(BASELINE * scales[n], \"rem\"));\n  }))))\n};","map":{"version":3,"sources":["/Users/jenil/Desktop/code/portfolio/src/components/designSystem/atoms.ts"],"names":["BASELINE","scales","xxsmall","xsmall","small","medium","large","xlarge","xxlarge","widths","auto","fill","container","content","page","baseline","breakpoints","narrow","colors","blackAlpha","whiteAlpha","wash","siteLight","siteDark","text","meta","mark","highlight","complementary","additive","font","family","sans","sohne","mono","size","regular","h1","h2","spacing","Object","assign","keys","map","n"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,KAAjB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,KADI;AAEbC,EAAAA,MAAM,EAAE,GAFK;AAGbC,EAAAA,KAAK,EAAE,IAHM;AAIbC,EAAAA,MAAM,EAAE,CAJK;AAKbC,EAAAA,KAAK,EAAE,GALM;AAMbC,EAAAA,MAAM,EAAE,CANK;AAObC,EAAAA,OAAO,EAAE;AAPI,CAAf;AAUA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,IAAI,EAAE,MAFO;AAGbC,EAAAA,SAAS,EAAE,OAHE;AAIb;AACAC,EAAAA,OAAO,EAAE,EALI;AAMbC,EAAAA,IAAI,EAAE;AANO,CAAf;AASAL,MAAM,CAACK,IAAP,kBAAsBL,MAAM,CAACG,SAA7B,gBAA4CZ,QAAQ,GAAGC,MAAM,CAACI,MAAlB,GAA2B,CAAvE,U,CAEA;;AACAI,MAAM,CAACI,OAAP,oCAA2CJ,MAAM,CAACK,IAAlD;AAEA,eAAe;AACbC,EAAAA,QAAQ,EAAEf,QADG;AAEbS,EAAAA,MAAM,EAANA,MAFa;AAGbO,EAAAA,WAAW,EAAE;AACXX,IAAAA,MAAM,QADK;AAEXY,IAAAA,MAAM;AAFK,GAHA;AAObC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,qBADN;AAENC,IAAAA,UAAU,EAAE,2BAFN;AAGNC,IAAAA,IAAI,EAAE,MAHA;AAINC,IAAAA,SAAS,EAAE,oBAJL;AAKNC,IAAAA,QAAQ,EAAE,0BALJ;AAMNC,IAAAA,IAAI,EAAE,MANA;AAONC,IAAAA,IAAI,EAAE,SAPA;AAQNC,IAAAA,IAAI,EAAE,yBARA;AASNC,IAAAA,SAAS,EAAE,SATL;AAUNC,IAAAA,aAAa,EAAE,SAVT;AAWNC,IAAAA,QAAQ,EAAE;AAXJ,GAPK;AAoBbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,gFADE;AAENC,MAAAA,KAAK,wBAFC;AAGNC,MAAAA,IAAI;AAHE,KADJ;AAMJC,IAAAA,IAAI,EAAE;AACJ/B,MAAAA,KAAK,YAAKH,MAAM,CAACG,KAAZ,QADD;AAEJgC,MAAAA,OAAO,YAAKnC,MAAM,CAACI,MAAZ,QAFH;AAGJgC,MAAAA,EAAE,YAAKpC,MAAM,CAACM,MAAZ,QAHE;AAIJ+B,MAAAA,EAAE,YAAKrC,MAAM,CAACK,KAAZ;AAJE;AANF,GApBO;AAiCbL,EAAAA,MAAM,EAANA,MAjCa;AAkCb;AACA;AACAsC,EAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,OAAAD,MAAM,GACb,EADa,4BAETA,MAAM,CAACE,IAAP,CAAYzC,MAAZ,CAAD,CAAoD0C,GAApD,CAAwD,UAACC,CAAD;AAAA,+BAExDA,CAFwD,YAEjD5C,QAAQ,GAAGC,MAAM,CAAC2C,CAAD,CAFgC;AAAA,GAAxD,CAFU;AApCF,CAAf","sourcesContent":["const BASELINE = 1.425\n\nconst scales = {\n  xxsmall: 0.125,\n  xsmall: 0.5,\n  small: 0.75,\n  medium: 1,\n  large: 1.5,\n  xlarge: 3,\n  xxlarge: 4,\n}\n\nconst widths = {\n  auto: \"auto\",\n  fill: \"100%\",\n  container: \"34rem\",\n  // These values are changed momentarily; they’re set to 0 here to suppress TS errors.\n  content: \"\",\n  page: \"\",\n}\n\nwidths.page = `calc(${widths.container} + ${BASELINE * scales.medium * 2}rem)`\n\n// Not entirely sure where this stray .25rem comes from, but it’s needed to align things properly\nwidths.content = `calc(.25rem + (100vw - ${widths.page}) / 2)`\n\nexport default {\n  baseline: BASELINE,\n  widths,\n  breakpoints: {\n    medium: `64em`,\n    narrow: `50em`,\n  },\n  colors: {\n    blackAlpha: \"rgba(0, 0, 0, 0.75)\",\n    whiteAlpha: \"rgba(255, 255, 255, 0.75)\",\n    wash: \"#eee\",\n    siteLight: \"rgba(0, 0, 0, 0.6)\",\n    siteDark: \"rgba(255, 255, 255, 0.6)\",\n    text: \"#111\",\n    meta: \"#44464B\",\n    mark: \"rgba(255, 200, 0, 0.15)\",\n    highlight: \"#ffc800\",\n    complementary: \"#058cff\",\n    additive: \"rgba(0,0,0,.05)\",\n  },\n  font: {\n    family: {\n      sans: `\"National 2 Web\", -apple-system, system-ui, BlinkMacSystemFont, sans-serif`,\n      sohne: `\"Soehne Breit Web\"`,\n      mono: `\"JetBrains Mono Web\", \"Input Mono\", \"Source Code Pro\", \"Monaco\", monospace`,\n    },\n    size: {\n      small: `${scales.small}rem`,\n      regular: `${scales.medium}rem`,\n      h1: `${scales.xlarge}rem`,\n      h2: `${scales.large}rem`,\n    },\n  },\n  scales,\n  // This confusing little function takes `scales` and creates\n  // rem-based values for each size\n  spacing: Object.assign(\n    {},\n    ...(Object.keys(scales) as Array<keyof typeof scales>).map((n) => ({\n      // e.g. small: '(BASELINE * 0.875)rem'\n      [n]: `${BASELINE * scales[n]}rem`,\n    }))\n  ),\n}\n"]},"metadata":{},"sourceType":"module"}