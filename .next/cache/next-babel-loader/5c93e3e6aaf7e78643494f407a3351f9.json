{"ast":null,"code":"var _jsxFileName = \"/Users/jenil/Desktop/code/portfolio/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { initGA, logEvent, logPageView } from \"@/utils/analytics\";\nimport { useEffect } from \"react\";\nimport \"../public/fonts/fonts.css\";\nexport function reportWebVitals({\n  id,\n  name,\n  label,\n  value\n}) {\n  var _window;\n\n  if ((_window = window) === null || _window === void 0 ? void 0 : _window.GA_INITIALIZED) {\n    logEvent({\n      category: `Next.js ${label} metric`,\n      action: name,\n      value: Math.round(name === \"CLS\" ? value * 1000 : value),\n      // values must be integers\n      label: id,\n      // id unique to current page load\n      nonInteraction: true // avoids affecting bounce rate.\n\n    });\n  }\n}\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  useEffect(() => {\n    if (!window.GA_INITIALIZED) {\n      initGA();\n      window.GA_INITIALIZED = true;\n    }\n\n    logPageView();\n  });\n  return __jsx(React.Fragment, null, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jenil/Desktop/code/portfolio/pages/_app.tsx"],"names":["initGA","logEvent","logPageView","useEffect","reportWebVitals","id","name","label","value","window","GA_INITIALIZED","category","action","Math","round","nonInteraction","App","Component","pageProps"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,mBAA9C;AAEA,SAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,2BAAP;AAEA,OAAO,SAASC,eAAT,CAAyB;AAC9BC,EAAAA,EAD8B;AAE9BC,EAAAA,IAF8B;AAG9BC,EAAAA,KAH8B;AAI9BC,EAAAA;AAJ8B,CAAzB,EAUE;AAAA;;AACP,iBAAIC,MAAJ,4CAAI,QAAQC,cAAZ,EAA4B;AAC1BT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,QAAQ,EAAG,WAAUJ,KAAM,SADpB;AAEPK,MAAAA,MAAM,EAAEN,IAFD;AAGPE,MAAAA,KAAK,EAAEK,IAAI,CAACC,KAAL,CAAWR,IAAI,KAAK,KAAT,GAAiBE,KAAK,GAAG,IAAzB,GAAgCA,KAA3C,CAHA;AAGmD;AAC1DD,MAAAA,KAAK,EAAEF,EAJA;AAII;AACXU,MAAAA,cAAc,EAAE,IALT,CAKe;;AALf,KAAD,CAAR;AAOD;AACF;;AAED,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAgE;AAC9Df,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,MAAM,CAACC,cAAZ,EAA4B;AAC1BV,MAAAA,MAAM;AACNS,MAAAA,MAAM,CAACC,cAAP,GAAwB,IAAxB;AACD;;AACDR,IAAAA,WAAW;AACZ,GANQ,CAAT;AAQA,SACE,4BACE,MAAC,SAAD,eAAegB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;AAED,eAAeF,GAAf","sourcesContent":["import { initGA, logEvent, logPageView } from \"@/utils/analytics\"\nimport { AppProps } from \"next/app\"\nimport { ReactFragment, useEffect } from \"react\"\nimport \"../public/fonts/fonts.css\"\n\nexport function reportWebVitals({\n  id,\n  name,\n  label,\n  value,\n}: {\n  id: string\n  name: string\n  label: string\n  value: number\n}): void {\n  if (window?.GA_INITIALIZED) {\n    logEvent({\n      category: `Next.js ${label} metric`,\n      action: name,\n      value: Math.round(name === \"CLS\" ? value * 1000 : value), // values must be integers\n      label: id, // id unique to current page load\n      nonInteraction: true, // avoids affecting bounce rate.\n    })\n  }\n}\n\nfunction App({ Component, pageProps }: AppProps): ReactFragment {\n  useEffect(() => {\n    if (!window.GA_INITIALIZED) {\n      initGA()\n      window.GA_INITIALIZED = true\n    }\n    logPageView()\n  })\n\n  return (\n    <>\n      <Component {...pageProps} />\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}